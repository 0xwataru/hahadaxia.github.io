(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{372:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[t._v("命令行")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('scp -P 222 -r ./file.zip  root@1.1.1.1:~/filename.zip\n\n\ngrep -R searchstr  /etc/*\n\ngrep -o 只显示命中正则的信息\n\n压缩\ntar -czvf /path/to/file.tar.gz file\n\n解压\ntar -xzvf /path/to/file.tar.gz /path/to\n\n加密压缩\ntar -czvf - file | openssl des3 -salt -k password -out /path/to/file.tar.gz\n\n解密解压\nopenssl des3 -d -k password -salt -in /path/to/file.tar.gz | tar xzf -\n\nzip加密\nzip -rP abc#123 test.zip test.txt\nzip解密\nunzip -P passwork filename.zip\n\n#查找在文件夹下面所有.py结尾且不是__init__.py的文件\nfind ./ -name "*.py"  -type f ! -name "__init__.py" |  wc -l\n\n#重放cookie登录\njavascript.documents.cookie=cookiestr\n\n#豆瓣源\npip install django  --default-timeout=100 -i https://pypi.douban.com/simple  \n\n#阿里源\npip install pyyaml -i http://mirrors.aliyun.com/pypi/simple/  --trusted-host mirrors.aliyun.com\n\n# 离线安装package [参考](https://caldera.readthedocs.io/en/latest/Install-CALDERA-offline.html)\npip download -r caldera/requirements.txt --dest caldera/python_deps\npip install -r caldera/requirements.txt --no-index --find-links caldera/python_deps\n\ncurl -i -k -H "Authorization: Token token=1234" \'https://localhost/indicators?itype=ipv4&limit=1\'\n\n')])])]),a("ul",[a("li",[t._v("\b应急响应类")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 进程以及文件\b\n#快速查看进程信息，并获取进程文件位置\ntop -c \n\n#杀死进程 \nkill "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-9")]),t._v(" PID \n\n#根据文件名特征查找\ngrep -rni "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shell.name"')]),t._v(" * \n\n#根据文件大小特征查找\nfind / -size "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1223123")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" \ndu -h –max-depth="),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" *  #遍历文件夹下面的目录文件大小\n\n#根据文件创建时间查找\nfind / -mtime "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" -name * \n\n#查看进程占用信息\nlsof -p PID \n\n#读取进程在内存中的信息\n• cd /proc/PID\n• cat * |strings -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" |more\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 检测网络\n#查看“PORT”端口的占用情况\nlsof –i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("PORT号 eg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("sudo lsof -i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35002")]),t._v("\n# 查看不正常端口\n netstat -nap\n# 查看TCP连接\n netstat -an | grep tcp | awk '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n# 查看SYN连接\nnetstat -an | grep SYN | awk '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("' | awk -F"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("' | sort | uniq -c | sort -nr | more\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" \b检测系统命令\n#显示所有的文件包含隐藏文件的详细信息，并按生成时间从早到晚排序\nls -alt /bin/ | head -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nls -alt /usr/sbin/ | head -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nls -alt /usr/bin/ | head -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nls -lR | grep "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^-"')]),t._v("| wc -l\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" \b检查日志\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),t._v(" 系统日志\ncrontab日志：/var/log/cron\nsecure日志：/var/log/secure\nlastlog日志：/var/log/lastlog\nbash日志：~/.bash_history\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),t._v(" Web日志\naccess_log\nerror_log\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 注意事项\n一定要查看系统命令是否被替换，否则所做的都是一切徒劳\n若系统替换可用其他代替，如：ps使用top，netstat使用ss，busybox等\nlsof -n | grep delete 查找已经删除但是还在使用的文件\n留意下是否有SSH后门\n注意是否存在隐藏进程\n实在无法删除可使用chattr +i锁定相应计划任务文件\n实在不行修改把curl ，wget ，lynx 文件全局重命名\n\n资料参考来源：https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//sec.ctrip.com/doc/%E8%AE%AE%E9%A2%98%E5%88%86%E4%BA%ABPPT.pdf")]),t._v("\n")])])]),a("ul",[a("li",[t._v("常见的安装包")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("apt-get install net-tools\n")])])]),a("ul",[a("li",[t._v("清除磁盘垃圾")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo apt-get autoremove\nsudo apt-get clean\n")])])]),a("ul",[a("li",[t._v("\bdocker\b常见命令行")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("# docker images编译\ndocker build -t  imagename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  .\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1680")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("  IMAGE_ID \n\n### 查看所有容器的id\n- docker ps -qa\n- docker stop $(docker ps -qa)\n### 导出image\ndocker save  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5322")]),t._v(" > logstash.tar\n### docker与hostcp\n- docker cp /www/runoob containter_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("/www/\n\n### docker保存容器到image\ndocker commit containerid hahadaxia/scirius"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),t._v("\n### 上传到dockerhub\ndocker login hub.docker.com #需要登陆两次\ndocker login -u hahadaxia -p a"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09048122003")]),t._v("\ndocker tag hahadaxia/scirius"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("   hahadaxia/scirius"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\ndocker push  hahadaxia/scirius"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n- 注意：hahadaxia一定是自己的账户名称.需要将REPOSITORY命名为hahadaxia后才可以提交\n\n#### 容器和image名称修改\ndocker rename old_name new_name\ndocker tag IMAGEID(镜像id) REPOSITORY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("TAG（仓库：标签）\n\n### 创建container \ndocker run -d -ti -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1433")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1433")]),t._v(" imageid\n\n### 修改容器的端口映射配置文件\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("停止docker container\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("修改网络配置\nvim /var/lib/docker/containers/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("container_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/hostconfig.json\n修改字段"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PortBindings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"80/tcp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"HostIp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"HostPort"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080"')]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//宿主机ip")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 重启docker服务 systemctl restart docker\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 启动 docker容器\n")])])]),a("h3",{attrs:{id:"批量删除镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量删除镜像","aria-hidden":"true"}},[t._v("#")]),t._v(" 批量删除镜像")]),t._v(" "),a("p",[t._v("docker rmi $(docker images -q)")]),t._v(" "),a("h3",{attrs:{id:"批量删除redis的key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量删除redis的key","aria-hidden":"true"}},[t._v("#")]),t._v(" 批量删除redis的key")]),t._v(" "),a("p",[t._v('redis-cli keys "user*" | xargs redis-cli del')]),t._v(" "),a("ul",[a("li",[t._v("网络常见命令行")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//httpbin.org/user-agent")]),t._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//httpbin.org/ip")]),t._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//httpbin.org/headers")]),t._v("\n### httpbin服务创建：docker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" kennethreitz/httpbin\n")])])]),a("ul",[a("li",[t._v("git常见命令与配置")])]),t._v(" "),a("ul",[a("li",[t._v("免密登录")])]),t._v(" "),a("ol",[a("li",[t._v("clone repo")])]),t._v(" "),a("blockquote",[a("p",[t._v("git clone https://xxx")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("生成密钥")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('ssh-keygen -t rsa -C "xxxxx@xxxxx.com"\n# 三次回车即可生成 ssh key\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("将公钥放到git平台上（github）")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cat ~/.ssh/id_rsa.pub   #打印出来的这段字符串就是公钥了，配置github右上->setting->ssh\n")])])]),a("ul",[a("li",[t._v("修改配置")])]),t._v(" "),a("blockquote",[a("p",[t._v("git config -e")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("找到git配置文件")])]),t._v(" "),a("p",[t._v("修改前")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[remote "origin"]  \n    url = https://xxxx.git  \n    fetch = +refs/heads/*:refs/remotes/origin/*\n')])])]),a("p",[t._v("修改后")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[remote "origin"]  \n    url = git@xxx.git    #这个地址，自行打开项目主页查看\n    fetch = +refs/heads/*:refs/remotes/origin/* \n')])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v('删除已经提交的代码文件夹\ngit rm -r --cached  "utils/xx"')])]),t._v(" "),a("h3",{attrs:{id:"ubuntu安装ssserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装ssserver","aria-hidden":"true"}},[t._v("#")]),t._v(" ubuntu安装ssserver")]),t._v(" "),a("p",[t._v("ssserver -c /etc/shadowsocks/config.json -d start\nnohup ssserver -c /etc/shadowsocks.json > /dev/null 2>&1 &")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("mitmproxy\nmitmweb -p 666\n在浏览器配置 代理 ip:666\n在ip:8081 查看http请求响应流量报")])]),t._v(" "),a("h3",{attrs:{id:"windows-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-系列","aria-hidden":"true"}},[t._v("#")]),t._v(" windows 系列")]),t._v(" "),a("ul",[a("li",[t._v("打开虚拟键盘 [win] + [R] 输入 osk")])]),t._v(" "),a("h3",{attrs:{id:"mac-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac-系列","aria-hidden":"true"}},[t._v("#")]),t._v(" mac 系列")]),t._v(" "),a("p",[t._v("安装工具，查看工具，和停用工具（服务）的命令如下：")]),t._v(" "),a("p",[t._v("brew install nginx // 安装nginx")]),t._v(" "),a("p",[t._v("brew services list  // 查看服务列表")]),t._v(" "),a("p",[t._v("brew services restart  nginx // 重启nginx")]),t._v(" "),a("p",[t._v("brew services stop nginx // 关闭nginx")]),t._v(" "),a("p",[t._v("brew outdated //查看需要更新的 服务")]),t._v(" "),a("p",[t._v("brew update // 更新所有服务")]),t._v(" "),a("h3",{attrs:{id:"vim-格式化json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-格式化json","aria-hidden":"true"}},[t._v("#")]),t._v(" vim 格式化json")]),t._v(" "),a("p",[t._v("在vim输入以下命令就可以格式化\n"),a("code",[t._v(":%!python -m json.tool")])]),t._v(" "),a("h3",{attrs:{id:"ubuntu系统，想默认用root登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu系统，想默认用root登陆","aria-hidden":"true"}},[t._v("#")]),t._v(" ubuntu系统，想默认用root登陆")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" 使用ubuntu登录系统\n1 sudo -s\n切换到root下，修改root密码\n2 sudo passwd root\n修改sshd_config配置，把PermitRootLogin源行注释，并增加一行为：\n3sudo vi /etc/ssh/sshd_config\n#PermitRootLogin prohibit-password  \nPermitRootLogin yes\n4 service sshd restart\n5 使用root、新密码登录系统\n")])])]),a("h3",{attrs:{id:"打开crontab日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打开crontab日志","aria-hidden":"true"}},[t._v("#")]),t._v(" 打开crontab日志")]),t._v(" "),a("p",[t._v("sudo vim /etc/rsyslog.d/50-default.conf\n取消 cron 行的注释")])])},[],!1,null,null,null);s.default=e.exports}}]);